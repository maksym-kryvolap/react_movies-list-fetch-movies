{"version":3,"sources":["components/MovieCard/MovieCard.tsx","components/MoviesList/MoviesList.tsx","api.ts","components/FindMovie/FindMovie.tsx","App.tsx","index.tsx"],"names":["MovieCard","movie","className","src","imgUrl","alt","title","description","href","imdbUrl","MoviesList","movies","map","imdbId","getMovie","query","fetch","then","res","json","catch","Response","Error","FindMovie","setMovies","useState","setQuery","loading","setLoading","setMovie","failedRequest","setFailedRequest","addMovie","request","a","film","Title","Plot","Poster","imdbID","searchMovie","htmlFor","type","id","placeholder","value","onChange","event","target","classNames","disabled","length","onClick","undefined","App","find","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.74b841c1.chunk.js","sourcesContent":["import React from 'react';\nimport { Movie } from '../../types/Movie';\nimport './MovieCard.scss';\n\ntype Props = {\n  movie: Movie,\n};\n\nexport const MovieCard: React.FC<Props> = ({ movie }) => (\n  <div className=\"card\" data-cy=\"movieCard\">\n    <div className=\"card-image\">\n      <figure className=\"image is-4by3\">\n        <img\n          data-cy=\"moviePoster\"\n          src={movie.imgUrl}\n          alt=\"Film logo\"\n        />\n      </figure>\n    </div>\n    <div className=\"card-content\">\n      <div className=\"media\">\n        <div className=\"media-left\">\n          <figure className=\"image is-48x48\">\n            <img\n              src=\"images/imdb-logo.jpeg\"\n              alt=\"imdb\"\n            />\n          </figure>\n        </div>\n        <div className=\"media-content\">\n          <p className=\"title is-8\" data-cy=\"movieTitle\">{movie.title}</p>\n        </div>\n      </div>\n\n      <div className=\"content\" data-cy=\"movieDescription\">\n        {movie.description}\n        <br />\n        <a href={movie.imdbUrl} data-cy=\"movieURL\">\n          IMDB\n        </a>\n      </div>\n    </div>\n  </div>\n);\n","import React from 'react';\n\nimport './MoviesList.scss';\nimport { MovieCard } from '../MovieCard';\nimport { Movie } from '../../types/Movie';\n\ntype Props = {\n  movies: Movie[];\n};\n\nexport const MoviesList: React.FC<Props> = ({ movies }) => (\n  <div className=\"movies\">\n    {movies.map(movie => (\n      <MovieCard\n        key={movie.imdbId}\n        movie={movie}\n      />\n    ))}\n  </div>\n);\n","import { MovieData } from './types/MovieData';\nimport { ResponseError } from './types/ReponseError';\n\nconst API_URL = 'https://www.omdbapi.com/?apikey=ed755433';\n\nexport function getMovie(query: string): Promise<MovieData | ResponseError> {\n  return fetch(`${API_URL}&t=${query}`)\n    .then(res => res.json())\n    .catch(() => ({\n      Response: 'False',\n      Error: 'unexpected error',\n    }));\n}\n","import React, { useState } from 'react';\nimport classNames from 'classnames';\n\nimport './FindMovie.scss';\nimport { Movie } from '../../types/Movie';\n\nimport { getMovie } from '../../api';\nimport { MovieCard } from '../MovieCard';\n\ntype Props = {\n  setMovies: (element: Movie) => void,\n};\n\nexport const FindMovie: React.FC<Props> = ({ setMovies }) => {\n  const [query, setQuery] = useState('');\n  const [loading, setLoading] = useState(false);\n  const [movie, setMovie] = useState<Movie | undefined>();\n  const [failedRequest, setFailedRequest] = useState(false);\n\n  const addMovie = async (request: string) => {\n    const film = await getMovie(request);\n\n    if ('Title' in film) {\n      const {\n        Title,\n        Plot,\n        Poster,\n        imdbID,\n      } = film;\n\n      setMovie({\n        title: Title,\n        description: Plot,\n        imgUrl: (Poster !== 'N/A' ? Poster\n          : 'https://via.placeholder.com/360x270.png?text=no%20preview'),\n        imdbUrl: `https://www.imdb.com/title/${imdbID}`,\n        imdbId: imdbID,\n      });\n    } else {\n      setFailedRequest(true);\n    }\n\n    setLoading(false);\n  };\n\n  const searchMovie = () => {\n    addMovie(query);\n    setLoading(true);\n  };\n\n  const queryTittle = (event: React.ChangeEvent<HTMLInputElement>) => {\n    setQuery(event.target.value);\n    setFailedRequest(false);\n  };\n\n  const addMovieTolist = () => {\n    if (movie) {\n      setMovies(movie);\n    }\n\n    setQuery('');\n    setMovie(undefined);\n  };\n\n  return (\n    <>\n      <form className=\"find-movie\">\n        <div className=\"field\">\n          <label className=\"label\" htmlFor=\"movie-title\">\n            Movie title\n          </label>\n\n          <div className=\"control\">\n            <input\n              data-cy=\"titleField\"\n              type=\"text\"\n              id=\"movie-title\"\n              placeholder=\"Enter a title to search\"\n              className=\"input is-dander\"\n              value={query}\n              onChange={queryTittle}\n            />\n          </div>\n\n          {failedRequest && (\n            <p className=\"help is-danger\" data-cy=\"errorMessage\">\n              Can&apos;t find a movie with such a title\n            </p>\n          )}\n        </div>\n\n        <div className=\"field is-grouped\">\n          {!movie ? (\n            <div className=\"control\">\n              <button\n                data-cy=\"searchButton\"\n                type=\"submit\"\n                className={classNames('button is-light',\n                  { 'is-loading': loading })}\n                disabled={!query.length}\n                onClick={searchMovie}\n              >\n                Find a movie\n              </button>\n            </div>\n          ) : (\n            <div className=\"field is-grouped\">\n              <div className=\"control\">\n                <button\n                  data-cy=\"searchButton\"\n                  type=\"submit\"\n                  className={classNames('button is-light',\n                    { 'is-loading': loading })}\n                  disabled={!query.length}\n                  onClick={searchMovie}\n                >\n                  Search again\n                </button>\n              </div>\n\n              <div className=\"control\">\n                <button\n                  data-cy=\"addButton\"\n                  type=\"button\"\n                  className=\"button is-primary\"\n                  onClick={addMovieTolist}\n                >\n                  Add to the list\n                </button>\n              </div>\n            </div>\n          )}\n        </div>\n      </form>\n\n      {movie && (\n        <div className=\"container\" data-cy=\"previewContainer\">\n          <h2 className=\"title\">Preview</h2>\n          <MovieCard movie={movie} />\n        </div>\n      )}\n    </>\n  );\n};\n","import { useState } from 'react';\nimport './App.scss';\nimport { MoviesList } from './components/MoviesList';\nimport { FindMovie } from './components/FindMovie';\nimport { Movie } from './types/Movie';\n\nexport const App = () => {\n  const [movies, setMovies] = useState<Movie[]>([]);\n\n  const addMovies = (movie: Movie) => {\n    const findMovie = movies.find(element => element.imdbId === movie.imdbId);\n\n    if (!findMovie) {\n      setMovies([...movies, movie]);\n    }\n  };\n\n  return (\n    <div className=\"page\">\n      <div className=\"page-content\">\n        <MoviesList movies={movies} />\n      </div>\n\n      <div className=\"sidebar\">\n        <FindMovie setMovies={addMovies} />\n      </div>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport 'bulma/css/bulma.css';\nimport { App } from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}